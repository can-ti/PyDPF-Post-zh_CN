
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "examples\05-Legacy\05-static-analysis.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_examples_05-Legacy_05-static-analysis.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_examples_05-Legacy_05-static-analysis.py:


.. _ref_static_analysis:

Static analysis
===============
**静态分析**

本例展示了如何使用 PyDPF-Post 对静态分析的结果文件进行后处理。

.. GENERATED FROM PYTHON SOURCE LINES 12-15

Perform required imports
------------------------
**执行所需的导入**

.. GENERATED FROM PYTHON SOURCE LINES 15-19

.. code-block:: Python


    from ansys.dpf import post
    from ansys.dpf.post import examples








.. GENERATED FROM PYTHON SOURCE LINES 20-23

Get ``Solution`` object
-----------------------
**获取 ``Solution`` 对象**

.. GENERATED FROM PYTHON SOURCE LINES 23-31

.. code-block:: Python


    # 此示例加载了一个在 Ansys Mechanical 中计算的静态分析结果文件。

    example_path = examples.download_all_kinds_of_complexity()

    solution = post.load_solution(example_path)
    print(solution)





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Static Analysis Solution object.


    Data Sources
    ------------------------------
    DPF  DataSources: 
      Result files:
         result key: rst and path: C:\Users\ff\AppData\Roaming\Python\Python310\site-packages\ansys\dpf\core\examples\result_files\testing\allKindOfComplexity.rst 
      Secondary files:


    DPF Model
    ------------------------------
    Static analysis
    Unit system: MKS: m, kg, N, s, V, A, degC
    Physics Type: Mechanical
    Available results:
         -  displacement: Nodal Displacement
         -  reaction_force: Nodal Force   
         -  element_nodal_forces: ElementalNodal Element nodal Forces
         -  stress: ElementalNodal Stress 
         -  elemental_volume: Elemental Volume
         -  stiffness_matrix_energy: Elemental Energy-stiffness matrix
         -  artificial_hourglass_energy: Elemental Hourglass Energy
         -  thermal_dissipation_energy: Elemental thermal dissipation energy
         -  kinetic_energy: Elemental Kinetic Energy
         -  co_energy: Elemental co-energy
         -  incremental_energy: Elemental incremental energy
         -  elastic_strain: ElementalNodal Strain
         -  thermal_strain: ElementalNodal Thermal Strains
         -  thermal_strains_eqv: ElementalNodal Thermal Strains eqv
         -  swelling_strains: ElementalNodal Swelling Strains
         -  structural_temperature: ElementalNodal Temperature
    ------------------------------
    DPF  Meshed Region: 
      15129 nodes 
      10292 elements 
      Unit: m 
      With solid (3D) elements, shell (2D) elements, shell (3D) elements, beam (1D) elements
    ------------------------------
    DPF  Time/Freq Support: 
      Number of sets: 1 
    Cumulative     Time (s)       LoadStep       Substep         
    1              1.000000       1              1               





.. GENERATED FROM PYTHON SOURCE LINES 32-35

Get ``Result`` objects
----------------------
**获取 ``Result`` 对象**

.. GENERATED FROM PYTHON SOURCE LINES 37-40

Get displacement result
~~~~~~~~~~~~~~~~~~~~~~~
**获取位移 ``Result`` 对象**

.. GENERATED FROM PYTHON SOURCE LINES 40-45

.. code-block:: Python


    disp_result = solution.displacement()
    disp = disp_result.vector
    print(disp)





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Displacement result.

    This result has been computed using dpf.core.Operator objects, which
    have been chained together according to the following list:
    - U: Result operator. Compute the desired result.





.. GENERATED FROM PYTHON SOURCE LINES 46-49

Check number of fields
~~~~~~~~~~~~~~~~~~~~~~
Check the number of fields.

.. GENERATED FROM PYTHON SOURCE LINES 49-52

.. code-block:: Python


    print(disp.num_fields)





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    1




.. GENERATED FROM PYTHON SOURCE LINES 53-56

Get data from field
~~~~~~~~~~~~~~~~~~~
Get data from a field.

.. GENERATED FROM PYTHON SOURCE LINES 56-59

.. code-block:: Python


    print(disp.get_data_at_field(0))





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    [[ 9.84182297e-06  5.13025031e-06 -6.66435651e-07]
     [ 9.95996777e-06  4.93526360e-06 -6.25236961e-07]
     [ 9.93154893e-06  5.88552090e-06 -7.83251832e-07]
     ...
     [ 5.00000000e-03 -1.54556837e-04  0.00000000e+00]
     [ 5.00000000e-03 -1.56813550e-04  0.00000000e+00]
     [ 5.00000000e-03 -1.66125455e-04  0.00000000e+00]]




.. GENERATED FROM PYTHON SOURCE LINES 60-63

Get maximum data value over all fields
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
**获取所有 fields 的最大数据值**

.. GENERATED FROM PYTHON SOURCE LINES 63-66

.. code-block:: Python


    print(disp.max_data)





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    [[8.50619058e+04 1.04659292e+01 3.73620870e+05]]




.. GENERATED FROM PYTHON SOURCE LINES 67-70

Get minimum data value over all fields
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
**获取所有 fields 的最小数据值**

.. GENERATED FROM PYTHON SOURCE LINES 70-73

.. code-block:: Python


    print(disp.min_data)





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    [[-1.82645944e-06 -1.04473039e+01 -2.94677257e-04]]




.. GENERATED FROM PYTHON SOURCE LINES 74-77

Get maximum data value over targeted field
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
**获取目标 fields 的最大数据值**

.. GENERATED FROM PYTHON SOURCE LINES 77-80

.. code-block:: Python


    print(disp.get_max_data_at_field(0))





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    [8.50619058e+04 1.04659292e+01 3.73620870e+05]




.. GENERATED FROM PYTHON SOURCE LINES 81-84

Get minimum data value over all fields
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
**获取目标 fields 的最小数据值**

.. GENERATED FROM PYTHON SOURCE LINES 84-87

.. code-block:: Python


    print(disp.get_min_data_at_field(0))





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    [-1.82645944e-06 -1.04473039e+01 -2.94677257e-04]




.. GENERATED FROM PYTHON SOURCE LINES 88-91

Get stress result
-----------------
**获取张量的应力 ``Result`` 对象**

.. GENERATED FROM PYTHON SOURCE LINES 91-95

.. code-block:: Python


    stress_result = solution.stress()
    stress = stress_result.tensor








.. GENERATED FROM PYTHON SOURCE LINES 96-99

Check number of fields
~~~~~~~~~~~~~~~~~~~~~~
检查不同 fields 中壳单元和实体单元的数量。

.. GENERATED FROM PYTHON SOURCE LINES 99-102

.. code-block:: Python


    print(stress.num_fields)





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    2




.. GENERATED FROM PYTHON SOURCE LINES 103-106

Get shell field
~~~~~~~~~~~~~~~
Get the shell field.

.. GENERATED FROM PYTHON SOURCE LINES 106-110

.. code-block:: Python


    shell_field = stress[0]
    print(shell_field.shell_layers)





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    shell_layers.nonelayer




.. GENERATED FROM PYTHON SOURCE LINES 111-114

Get solid field
~~~~~~~~~~~~~~~
Get the solid field.

.. GENERATED FROM PYTHON SOURCE LINES 114-117

.. code-block:: Python


    solid_field = stress[1]








.. GENERATED FROM PYTHON SOURCE LINES 118-121

Plot contour
~~~~~~~~~~~~
**绘制等值线图**

.. GENERATED FROM PYTHON SOURCE LINES 121-124

.. code-block:: Python


    stress.plot_contour()




.. image-sg:: /examples/05-Legacy/images/sphx_glr_05-static-analysis_001.png
   :alt: 05 static analysis
   :srcset: /examples/05-Legacy/images/sphx_glr_05-static-analysis_001.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 125-128

Get elastic strain result
-------------------------
**获得弹性应变结果**

.. GENERATED FROM PYTHON SOURCE LINES 128-132

.. code-block:: Python


    elastic_strain_result = solution.elastic_strain()
    elastic_strain = elastic_strain_result.tensor








.. GENERATED FROM PYTHON SOURCE LINES 133-136

Check number of fields
~~~~~~~~~~~~~~~~~~~~~~
检查不同 fields 中壳单元和实体单元的数量。

.. GENERATED FROM PYTHON SOURCE LINES 136-138

.. code-block:: Python

    print(elastic_strain.num_fields)





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    2




.. GENERATED FROM PYTHON SOURCE LINES 139-140

如果结果文件中包含，则可以使用此方法获取弹性应变结果。

.. GENERATED FROM PYTHON SOURCE LINES 140-143

.. code-block:: Python


    print(solution.plastic_strain())





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Tensor object.

    Object properties:
     - location   : Nodal

    Plastic strain object.




.. GENERATED FROM PYTHON SOURCE LINES 144-145

您也可以使用这种方法获得温度结果。

.. GENERATED FROM PYTHON SOURCE LINES 145-147

.. code-block:: Python


    print(solution.structural_temperature())




.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Scalar object.

    Object properties:
     - location   : Nodal

    Structural temperature object.





.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 0.592 seconds)


.. _sphx_glr_download_examples_05-Legacy_05-static-analysis.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: 05-static-analysis.ipynb <05-static-analysis.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: 05-static-analysis.py <05-static-analysis.py>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
